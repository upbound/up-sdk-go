//go:build !ignore_autogenerated

/*
Copyright 2025 The Upbound Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossplaneStatus) DeepCopyInto(out *CrossplaneStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossplaneStatus.
func (in *CrossplaneStatus) DeepCopy() *CrossplaneStatus {
	if in == nil {
		return nil
	}
	out := new(CrossplaneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstalledComponentsStatus) DeepCopyInto(out *InstalledComponentsStatus) {
	*out = *in
	if in.Crossplane != nil {
		in, out := &in.Crossplane, &out.Crossplane
		*out = new(CrossplaneStatus)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstalledComponentsStatus.
func (in *InstalledComponentsStatus) DeepCopy() *InstalledComponentsStatus {
	if in == nil {
		return nil
	}
	out := new(InstalledComponentsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *License) DeepCopyInto(out *License) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new License.
func (in *License) DeepCopy() *License {
	if in == nil {
		return nil
	}
	out := new(License)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *License) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseCapacity) DeepCopyInto(out *LicenseCapacity) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseCapacity.
func (in *LicenseCapacity) DeepCopy() *LicenseCapacity {
	if in == nil {
		return nil
	}
	out := new(LicenseCapacity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseList) DeepCopyInto(out *LicenseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]License, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseList.
func (in *LicenseList) DeepCopy() *LicenseList {
	if in == nil {
		return nil
	}
	out := new(LicenseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LicenseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseRestrictions) DeepCopyInto(out *LicenseRestrictions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseRestrictions.
func (in *LicenseRestrictions) DeepCopy() *LicenseRestrictions {
	if in == nil {
		return nil
	}
	out := new(LicenseRestrictions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSecretRef) DeepCopyInto(out *LicenseSecretRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSecretRef.
func (in *LicenseSecretRef) DeepCopy() *LicenseSecretRef {
	if in == nil {
		return nil
	}
	out := new(LicenseSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpec) DeepCopyInto(out *LicenseSpec) {
	*out = *in
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(LicenseSecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpec.
func (in *LicenseSpec) DeepCopy() *LicenseSpec {
	if in == nil {
		return nil
	}
	out := new(LicenseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseStatus) DeepCopyInto(out *LicenseStatus) {
	*out = *in
	in.ConditionedStatus.DeepCopyInto(&out.ConditionedStatus)
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(LicenseCapacity)
		**out = **in
	}
	if in.EnabledFeatures != nil {
		in, out := &in.EnabledFeatures, &out.EnabledFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = (*in).DeepCopy()
	}
	if in.GracePeriodEndsAt != nil {
		in, out := &in.GracePeriodEndsAt, &out.GracePeriodEndsAt
		*out = (*in).DeepCopy()
	}
	if in.InstalledComponents != nil {
		in, out := &in.InstalledComponents, &out.InstalledComponents
		*out = new(InstalledComponentsStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Restrictions != nil {
		in, out := &in.Restrictions, &out.Restrictions
		*out = new(LicenseRestrictions)
		**out = **in
	}
	if in.Usage != nil {
		in, out := &in.Usage, &out.Usage
		*out = new(LicenseUsage)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseStatus.
func (in *LicenseStatus) DeepCopy() *LicenseStatus {
	if in == nil {
		return nil
	}
	out := new(LicenseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseUsage) DeepCopyInto(out *LicenseUsage) {
	*out = *in
	if in.FirstMeasurement != nil {
		in, out := &in.FirstMeasurement, &out.FirstMeasurement
		*out = (*in).DeepCopy()
	}
	if in.LastMeasurement != nil {
		in, out := &in.LastMeasurement, &out.LastMeasurement
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseUsage.
func (in *LicenseUsage) DeepCopy() *LicenseUsage {
	if in == nil {
		return nil
	}
	out := new(LicenseUsage)
	in.DeepCopyInto(out)
	return out
}
